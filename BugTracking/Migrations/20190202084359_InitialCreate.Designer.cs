// <auto-generated />
using System;
using BugTracking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BugTracking.Migrations
{
    [DbContext(typeof(BugTrackingContext))]
    [Migration("20190202084359_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BugTracking.Models.ProjectItem", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ProjectDateCreated");

                    b.Property<DateTime>("ProjectDateUpdated");

                    b.Property<string>("ProjectDescription");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.HasKey("ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("BugTracking.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProjectId");

                    b.Property<DateTime>("TaskDateCreated");

                    b.Property<DateTime>("TaskDateUpdated");

                    b.Property<string>("TaskDescription");

                    b.Property<string>("TaskName")
                        .IsRequired();

                    b.Property<int>("TaskPriority");

                    b.Property<int>("TaskStatus");

                    b.HasKey("TaskId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("BugTracking.Models.TaskItem", b =>
                {
                    b.HasOne("BugTracking.Models.ProjectItem", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
